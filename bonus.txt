sudo apt install lighttpd        --> An alternative HTTP server besides NGINX and APACHE.
sudo ufw allow 80               --> Port 80 is the standard port for HTTP
sudo apt install mariadb-server --> MariaDB is a relational database. It's derived from MySQL Database Server's source code.
sudo mysql_secure_installation  --> To configure default and insecure settings...
    @-)First step will ask for password, press enter to skip.
    @-)Switch to unix option = N
    @-)Change the root password = N
    @-)Remove anonymous users = Y
    @-)Disallow root login remotely = Y
    @-)Remove test database and access to it = Y
    @-)Reload privilege tables now = Y

sudo mariadb                    --> Enter MariaDB console.
CREATE DATABASE database_name   --> Create a new database.
GRANT ALL ON database_name.* TO 'database_user'@'localhost' IDENTIFIED BY 'database_user_password' WITH GRANT OPTION;    --> Here's what we did...
    -Created a new database user, specified it will be on local network, and set a password. NOTE: Don't confuse this user with system users!
    -We're giving full permissions to this new user for the newly created database.
FLUSH PRIVILEGES;              --> Apply our changes
exit                           --> Exit from MariaDB console.
mariadb -u database_user -p    --> We'll try to connect to database with our created user. After this, it will ask for the password we set as database_user_password.
SHOW DATABASES;                --> Shows databases. Should see 2 databases: one we created and information_schema
exit                           --> Exit!

sudo apt install php-cgi php-mysql        --> COMMON GATEWAY INTERFACE - 
    -php-cgi (common gateway interface) is a web technology that allows web servers (apache, lighttpd etc.) to communicate with external applications' interpreters like PHP, PYTHON, PERL.
    -We're installing these plugins because WordPress is developed with PHP.
sudo apt install wget          --> We install this plugin to download files over HTTP, HTTPS, and FTP. We'll use it to fetch WordPress files from their website.
sudo wget http://wordpress.org/latest.tar.gz -P /var/www/html        --> Download the latest WordPress panel to specified directory (creates if doesn't exist)
sudo tar -xzvf /var/www/html/latest.tar.gz                          --> Extract files from downloaded tar.gz file
sudo rm /var/www/html/latest.tar.gz                                 --> Delete the archive file after extraction
sudo cp -r /var/www/html/wordpress/* /var/www/html                  --> Copy all contents from wordpress folder to specified path
sudo rm -rf /var/www/html/wordpress                                 --> Delete the wordpress folder as we don't need it anymore
sudo cp /var/www/html/wp-config-sample.php /var/www/html/wp-config.php --> Copy wp-config-sample file as wp-config
sudo nano /var/www/html/wp-config.php                               --> Open copied file with nano and edit these parts...
    -define( 'DB_NAME', 'database_name' );^M
    -define( 'DB_USER', 'database_user' );^M
    -define( 'DB_PASSWORD', 'database_user_password' );^M
@@sudo lighty-enable-mod fastcgi---------
@@sudo lighty-enable-mod fastcgi-php-----> Enable fastcgi module and php configuration this way
@sudo service lighttpd force-reload-----> Restart lighttpd server
sudo apt install vsftpd      --> Package needed for FTP server.
sudo ufw allow 21           --> Allow TCP UDP permission for port 21 from firewall.
sudo nano /etc/vsftpd.conf  -->
    @-)#write_enable=YES    // Remove # to enable writing ftp commands
    @-)user_sub_token=$USER
    @-)local_root=/home/$USER/ftp
    @-)userlist_enable=YES
    @-)userlist_file=/etc/vsftpd.userlist
    @-)userlist_deny=NO
sudo mkdir /home/username/ftp         --> Create ftp folder in user's directory
sudo mkdir /home/username/ftp/files   --> Create files folder
sudo chown nobody:nogroup /home/<username>/ftp    --> Set ownership and group of ftp folder to nobody
sudo chmod a-w /home/<username>/ftp             --> Give write permission to all users
sudo nano /etc/vsftpd.userlist                  --> Press CTRL + O then CTRL + X to save and exit. This allows connection with permitted users.
echo username | sudo tee -a /etc/vsftpd.userlist --> Add our user to userlist
